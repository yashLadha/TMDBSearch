{"version":3,"sources":["redux/Actions.js","redux/ActionTypes.js","Components/SearchBar.js","Components/MovieDetail.js","Components/MovieGrid.js","redux/Reducers.js","App.js","redux/Store.js","serviceWorker.js","index.js"],"names":["fetchMovieDetail","id","dispatch","_getURLConfig2","HOST","process","APIKEY","type","payload","movieId","fetch","then","response","json","error","console","log","movieInfo","catch","err","requestingAlternateTitle","movieTitles","requestingReview","movieReview","requestingCrew","movieCrew","SearchBar","state","query","handleQuery","e","preventDefault","_this","props","fetchMovies","handleChange","setState","Object","defineProperty","target","value","classes","this","react_default","a","createElement","className","container","noValidate","autoComplete","onSubmit","index_es","label","textField","onChange","name","margin","variant","Component","withRouter","connect","_getURLConfig","queryEncoded","encodeURI","requestMovies","movies","moviesList","receivedMovies","invalidateQuery","withStyles","theme","display","flexWrap","width","MovieDetail","match","params","modalDetail","populateAlternativeTitles","crewInflator","reviewInflator","_this$props","isMovieDetailReceived","movieDetail","isAtitleReceive","movieAtitles","movieReviews","counter","map","title","key","chip","progRoot","progress","size","length","crew","profileURL","profile_path","cast_id","src","style","borderRadius","alt","character","review","author","content","backdropImageLink","backdrop_path","spacing","root","item","md","xs","height","release_date","scrollReview","maxWidth","unit","textAlign","overflowY","overFlowX","MovieGrid","isReceived","isRequesting","movieList","inflateMovies","results","movie","posterLink","poster_path","detailLink","NavLink","to","activeStyle","textDecoration","color","card","component","media","image","cardContent","grid","flexGrow","objectFit","Reducer","arguments","undefined","isRequestInvalidated","isMovieDetailRequesting","isMovieDetailInvalidated","isAtitleRequest","isAtitleInvalidate","isReviewRequest","isReviewReceive","isReviewInvalidate","isCrewRequest","isCrewReceive","isCrewInvalidate","queryString","page","action","objectSpread","titles","cast","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ConfigureStore","Home","Components_SearchBar","Components_MovieGrid","App","es","Switch","Route","exact","path","Boolean","location","hostname","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6PAsIaA,EAAmB,SAAAC,GAAE,OAAI,SAAAC,GAAY,IAAAC,EA1GzC,CAAEC,KAFIC,gCAEEC,OADAD,oCA4GPD,EADwCD,EACxCC,KAAME,EADkCH,EAClCG,OACdJ,EA1F4C,CAC5CK,KC3CkC,uBD4ClCC,QAAS,CACPC,QAuF0BR,KAC5BS,IAAMN,EAAO,SAAWH,EAAK,YAAcK,GACxCK,KACC,SAAAC,GAAQ,OAAIA,EAASC,QACrB,SAAAC,GAAK,OAAIC,QAAQC,IAAI,mBAAoBF,KAE1CH,KAAK,SAAAE,GACJX,EA1FsD,CAC1DK,KCjDkC,uBDkDlCC,QAAS,CACPS,UAuFmCJ,EAtFnCJ,QAsF+BR,OAE9BiB,MAAM,SAAAC,GAAG,OAAIjB,EApF+B,CAC/CK,KCxDqC,0BDyDrCC,QAAS,CACPC,QAiF6CR,OAE/CC,EAhEsC,SAAAO,GAAO,MAAK,CAClDF,KC5EmC,wBD6EnCC,QAAS,CACPC,QAASA,IA6DFW,CAAyBnB,IAClCS,IAAMN,EAAO,SAAWH,EAAK,+BAAiCK,GAC3DK,KACC,SAAAC,GAAQ,OAAIA,EAASC,QACrB,SAAAC,GAAK,OAAIC,QAAQC,IAAI,uBAAwBF,KAE9CH,KAAK,SAAAE,GACJX,EAtF4D,CAChEK,KC5DmC,wBD6DnCC,QAAS,CACPC,QAmFmCR,EAlFnCoB,YAkFuCR,OAEtCK,MAAM,SAAAC,GAAG,OAAIjB,EAhFkC,CAClDK,KCnEsC,2BDoEtCC,QAAS,CACPC,QA6EgDR,OAElDC,EApE8B,SAAAO,GAAO,MAAK,CAC1CF,KC/EkC,uBDgFlCC,QAAS,CACPC,QAASA,IAiEFa,CAAiBrB,IAC1BS,IAAMN,EAAO,SAAWH,EAAK,oBAAsBK,GAChDK,KACC,SAAAC,GAAQ,OAAIA,EAASC,QACrB,SAAAC,GAAK,OAAIC,QAAQC,IAAI,uBAAwBF,KAE9CH,KAAK,SAAAE,GACJX,EApEqD,CACzDK,KCrFkC,uBDsFlCC,QAAS,CACPC,QAiE0BR,EAhE1BsB,YAgE8BV,OAE7BK,MAAM,SAAAC,GAAG,OAAIjB,EA9D0B,CAC1CK,KC5FqC,0BD6FrCC,QAAS,CACPC,QA2DwCR,OAE1CC,EAzD4B,SAAAO,GAAO,MAAK,CACxCF,KCjGgC,qBDkGhCC,QAAS,CACPC,QAASA,IAsDFe,CAAevB,IACxBS,IAAMN,EAAO,SAAWH,EAAK,oBAAsBK,GAChDK,KACC,SAAAC,GAAQ,OAAIA,EAASC,QACrB,SAAAC,GAAK,OAAIC,QAAQC,IAAI,uBAAwBF,KAE9CH,KAAK,SAAAE,GACJX,EAzD+C,CACnDK,KCvGgC,qBDwGhCC,QAAS,CACPC,QAsDwBR,EArDxBwB,UAqD4BZ,OAE3BK,MAAM,SAAAC,GAAG,OAAIjB,EAnDwB,CACxCK,KC9GmC,wBD+GnCC,QAAS,CACPC,QAgDsCR,0BEpJpCyB,6MACJC,MAAQ,CACNC,MAAO,MAGTC,YAAc,SAAAC,GACZA,EAAEC,iBACFC,EAAKC,MAAMC,YAAYF,EAAKL,MAAMC,UAGpCO,aAAe,SAAAP,GAAK,OAAI,SAAAE,GACtBE,EAAKI,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGT,EAAQE,EAAES,OAAOC,kFAIb,IACCC,EAAYC,KAAKT,MAAjBQ,QACR,OACEE,EAAAC,EAAAC,cAAA,QACEC,UAAWL,EAAQM,UACnBC,YAAU,EACVC,aAAa,MACbC,SAAUR,KAAKb,aAEfc,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACElD,GAAG,uBACHmD,MAAM,QACNN,UAAWL,EAAQY,UACnB9C,KAAK,OACLiC,MAAOE,KAAKf,MAAMC,MAClB0B,SAAUZ,KAAKP,aAAa,SAC5BoB,KAAK,QACLC,OAAO,SACPC,QAAQ,qBAlCMC,aAyCTC,cACbC,YAjEsB,SAAAjC,GACtB,OAAOA,GAGkB,SAAAzB,GACzB,MAAO,CACLgC,YAAa,SAAAN,GACX1B,EFiBqB,SAAA0B,GAAK,OAAI,SAAA1B,GAAY,IAAA2D,EAHvC,CAAEzD,KAFIC,gCAEEC,OADAD,oCAKPD,EADsCyD,EACtCzD,KAAME,EADgCuD,EAChCvD,OACRwD,EAAeC,UAAUnC,GAC/B1B,EA/B2B,SAAA0B,GAAK,MAAK,CACrCrB,KCJ4B,iBDK5BC,QAAS,CACPoB,MAAOA,IA4BAoC,CAAcpC,IACvBlB,IAAMN,EAAO,wBAA0BE,EAAS,UAAYwD,GACzDnD,KACC,SAAAC,GAAQ,OAAIA,EAASC,QACrB,SAAAC,GAAK,OAAIC,QAAQC,IAAI,mBAAoBF,KAE1CH,KAAK,SAAAE,GACJX,EA/BwB,SAAC0B,EAAOqC,GAAR,MAAoB,CAChD1D,KCV6B,kBDW7BC,QAAS,CACPoB,MAAOA,EACPsC,WAAYD,IA2BDE,CAAevC,EAAOf,MAEhCK,MAAM,SAAAC,GAAG,OAAIjB,EAzBa,SAAA0B,GAAK,MAAK,CACvCrB,KCjB+B,oBDkB/BC,QAAS,CACPoB,MAAOA,IAsBgBwC,CAAgBxC,OE7B5BM,CAAYN,OA0DzBgC,CAGES,qBAxDU,SAAAC,GAAK,MAAK,CACtBvB,UAAW,CACTwB,QAAS,OACTC,SAAU,QAEZnB,UAAW,CACTG,OAAQ,YACRiB,MAAO,WAiDPJ,CAAkB3C,KChChBgD,+LAEFhC,KAAKT,MAAMjC,iBAAiB0C,KAAKT,MAAM0C,MAAMC,OAAO3E,qCAG7C,IAWH4E,EACAC,EAmBAC,EAqBAC,EApDGC,EASHvC,KAAKT,MAPPQ,EAFKwC,EAELxC,QACAyC,EAHKD,EAGLC,sBACAC,EAJKF,EAILE,YACAC,EALKH,EAKLG,gBACAC,EANKJ,EAMLI,aACAC,EAPKL,EAOLK,aACA7D,EARKwD,EAQLxD,UAMF,IAAwB,IAApB2D,EAA0B,CAC5B,IAAIG,EAAU,EACdT,EAA4BO,EAAaG,IAAI,SAAAC,GAE3C,OADAF,IAEE5C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMuC,IAAKH,EAASzC,UAAWL,EAAQkD,KAAMvC,MAAOqC,EAAMA,eAI9DX,EACEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQmD,UAAxB,uBAEEjD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAkBL,UAAWL,EAAQoD,SAAUC,KAAM,MAwC3D,GAjCIrE,EAAUsE,OAAS,IACrBhB,EAAetD,EAAU+D,IAAI,SAAAQ,GAC3B,IAAIC,EAAa5F,iCAAqC2F,EAAKE,aAC3D,OACEvD,EAAAC,EAAAC,cAAA,OAAK6C,IAAKM,EAAKG,SACbxD,EAAAC,EAAAC,cAAA,OACEuD,IAAKH,EACLI,MAAO,CAAEC,aAAc,OACvBb,MAAOO,EAAKzC,KACZgD,IAAKP,EAAKzC,OAEZZ,EAAAC,EAAAC,cAAA,iBAPF,MAOiBmD,EAAKzC,KAPtB,IAO4BZ,EAAAC,EAAAC,cAAA,WAC1BF,EAAAC,EAAAC,cAAA,sBARF,MAQsBmD,EAAKQ,UAR3B,IAQsC7D,EAAAC,EAAAC,cAAA,WACpCF,EAAAC,EAAAC,cAAA,eAQJyC,EAAaS,OAAS,IACxBf,EAAiBM,EAAaE,IAAI,SAAAiB,GAChC,OACE9D,EAAAC,EAAAC,cAAA,OAAK6C,IAAKe,EAAOC,QACf/D,EAAAC,EAAAC,cAAA,mBADF,MACmB4D,EAAOC,OAD1B,IACkC/D,EAAAC,EAAAC,cAAA,WAChCF,EAAAC,EAAAC,cAAA,mBAFF,MAEmB4D,EAAOE,QAF1B,IAEmChE,EAAAC,EAAAC,cAAA,WACjCF,EAAAC,EAAAC,cAAA,eAMJqC,EAAuB,CACzB,IAAM0B,EACJvG,mCAAsC8E,EAAY0B,cACpDhC,EACElC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMJ,WAAS,EAAC+D,QAAS,GAAIhE,UAAWL,EAAQsE,MAC9CpE,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM6D,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrBvE,EAAAC,EAAAC,cAAA,OACEwD,MAAO,CACL5B,MAAO,OACP0C,OAAQ,SAEVf,IAAKQ,EACLL,IAAKpB,EAAYM,MACjBA,MAAON,EAAYM,SAGvB9C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM6D,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrBvE,EAAAC,EAAAC,cAAA,UAAKsC,EAAYM,QAEnB9C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM6D,MAAI,EAACE,GAAI,GAAID,GAAI,IACrBtE,EAAAC,EAAAC,cAAA,2BADF,IACyBsC,EAAYiC,cAErCzE,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM6D,MAAI,EAACE,GAAI,GAAID,GAAI,IACrBtE,EAAAC,EAAAC,cAAA,gCACCiC,GAEHnC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM6D,MAAI,EAACE,GAAI,GAAID,GAAI,IACrBtE,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQ4E,cAAerC,IAEzCrC,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM6D,MAAI,EAACE,GAAI,GAAID,GAAI,IACrBtE,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQ4E,cAAetC,UAK7CF,EACElC,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQmD,UACtBjD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAkBL,UAAWL,EAAQoD,SAAUC,KAAM,MAK3D,OAAOjB,SAnHenB,aAuHXC,cACbC,YA5JsB,SAAAjC,GACtB,OAAOA,GAGkB,SAAAzB,GACzB,MAAO,CACLF,iBAAkB,SAAAS,GAChBP,EAASF,EAAiBS,OAqJ9BmD,CAGES,qBAnJU,SAAAC,GAAK,MAAK,CACtByC,KAAM,CACJO,SAAU,IACV9D,OAAQ,UAEVqC,SAAU,CACRrC,OAA6B,EAArBc,EAAMwC,QAAQS,MAExB3B,SAAU,CACR0B,SAAU,IACVE,UAAW,SACXhE,OAAQ,UAEVmC,KAAM,CACJnC,OAAQc,EAAMwC,QAAQS,MAExBF,aAAc,CACZ5C,MAAO,OACP0C,OAAQ,IACRM,UAAW,SACXC,UAAW,YA+HXrD,CAAkBK,cChHhBiD,mLACK,IAAA1C,EACkDvC,KAAKT,MAAtD2F,EADD3C,EACC2C,WAAYC,EADb5C,EACa4C,aAAcC,EAD3B7C,EAC2B6C,UAAWrF,EADtCwC,EACsCxC,QAE7C,IAAmB,IAAfmF,EAAqB,CACvB,IAAMG,EAAgBD,EAAUE,QAAQxC,IAAI,SAAAyC,GAC1C,IAAIC,EAEFA,EADwB,OAAtBD,EAAME,YACK9H,kCAAoC4H,EAAME,YAGrD,gFACJ,IAAMC,EAAa,IAAMH,EAAMhI,GAC/B,OACE0C,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAM6D,MAAI,EAACtB,IAAKuC,EAAMhI,GAAIiH,GAAI,GAAID,GAAI,GACpCtE,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CACEC,GAAIF,EACJG,YAAa,CACXC,eAAgB,OAChBC,MAAO,UAGT9F,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAML,UAAWL,EAAQiG,MACvB/F,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEgE,OAAO,MACPwB,UAAU,MACVpC,IAAK0B,EAAMxC,MACX3C,UAAWL,EAAQmG,MACnBnD,MAAOwC,EAAMxC,MACboD,MAAOX,IAETvF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAaL,UAAWL,EAAQqG,aAC9BnG,EAAAC,EAAAC,cAACM,EAAA,EAAD,KAAa8E,EAAMxC,cAQjC,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQsE,MACtBpE,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAML,UAAWL,EAAQsG,KAAMhG,WAAS,EAAC+D,QAAS,IAC/CiB,IAIF,OAAqB,IAAjBF,EAEPlF,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQmD,UACtBjD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAkBL,UAAWL,EAAQoD,SAAUC,KAAM,MAIpDnD,EAAAC,EAAAC,cAAA,mBAvDaa,aA2DTC,cACbC,YAnGsB,SAAAjC,GACtB,OAAOA,GAGkB,SAAAzB,GACzB,MAAO,CACLF,iBAAkB,SAAAS,GAChBP,EAASF,EAAiBS,OA4F9BmD,CAGES,qBA1FU,SAAAC,GAAK,MAAK,CACtByC,KAAM,CACJiC,SAAU,GAEZN,KAAM,CACJpB,SAAU,KAEZwB,YAAa,CACX3B,OAAQ,GACRK,UAAW,UAEbuB,KAAM,CACJzB,SAAU,IACV9D,OAAQ,YAEVoF,MAAO,CACLK,UAAW,SAEbpD,SAAU,CACRrC,OAA6B,EAArBc,EAAMwC,QAAQS,MAExB3B,SAAU,CACR0B,SAAU,GACV9D,OAAQ,YAmERa,CAAkBsD,qBCnHTuB,EAAU,WAgClB,IA/BHvH,EA+BGwH,UAAApD,OAAA,QAAAqD,IAAAD,UAAA,GAAAA,UAAA,GA/BK,CACNtB,cAAc,EACdD,YAAY,EACZyB,sBAAsB,EAEtBC,yBAAyB,EACzBpE,uBAAuB,EACvBqE,0BAA0B,EAE1BC,iBAAiB,EACjBpE,iBAAiB,EACjBqE,oBAAoB,EAEpBC,iBAAiB,EACjBC,iBAAiB,EACjBC,oBAAoB,EAEpBC,eAAe,EACfC,eAAe,EACfC,kBAAkB,EAElBjC,UAAW,GACXzC,aAAc,GACdC,aAAc,GACd7D,UAAW,GACX0D,YAAa,GACb6E,YAAa,GACbvJ,QAAS,EACTwJ,KAAM,GAERC,EACGf,UAAApD,OAAA,EAAAoD,UAAA,QAAAC,EACH,OAAQc,EAAO3J,MACb,IJpC0B,iBIqCxB,OAAO8B,OAAA8H,EAAA,EAAA9H,CAAA,GACFV,EADL,CAEEkG,cAAc,EACdD,YAAY,EACZoC,YAAaE,EAAO1J,QAAQoB,QAEhC,IJ1C2B,kBI2CzB,OAAOS,OAAA8H,EAAA,EAAA9H,CAAA,GACFV,EADL,CAEEiG,YAAY,EACZC,cAAc,EACdC,UAAWoC,EAAO1J,QAAQ0D,aAE9B,IJhD6B,oBIiD3B,OAAO7B,OAAA8H,EAAA,EAAA9H,CAAA,GACFV,EADL,CAEE0H,sBAAsB,EACtBzB,YAAY,EACZC,cAAc,EACdmC,YAAaE,EAAO1J,QAAQoB,QAEhC,IJtDgC,uBIuD9B,OAAOS,OAAA8H,EAAA,EAAA9H,CAAA,GACFV,EADL,CAEE2H,yBAAyB,EACzBpE,uBAAuB,EACvBzE,QAASyJ,EAAO1J,QAAQC,UAE5B,IJ5DgC,uBI6D9B,OAAO4B,OAAA8H,EAAA,EAAA9H,CAAA,GACFV,EADL,CAEEuD,uBAAuB,EACvBoE,yBAAyB,EACzB7I,QAASyJ,EAAO1J,QAAQC,QACxB0E,YAAa+E,EAAO1J,QAAQS,YAEhC,IJnEmC,0BIoEjC,OAAOoB,OAAA8H,EAAA,EAAA9H,CAAA,GACFV,EADL,CAEE4H,0BAA0B,EAC1BrE,uBAAuB,EACvBoE,yBAAyB,EACzB7I,QAASyJ,EAAO1J,QAAQC,UAE5B,IJzEiC,wBI0E/B,OAAO4B,OAAA8H,EAAA,EAAA9H,CAAA,GACFV,EADL,CAEE6H,iBAAiB,EACjBpE,iBAAiB,EACjBqE,oBAAoB,IAExB,IJ/EiC,wBIgF/B,OAAOpH,OAAA8H,EAAA,EAAA9H,CAAA,GACFV,EADL,CAEEyD,iBAAiB,EACjBoE,iBAAiB,EACjBC,oBAAoB,EACpBpE,aAAc6E,EAAO1J,QAAQa,YAAY+I,SAE7C,IJtFoC,2BIuFlC,OAAO/H,OAAA8H,EAAA,EAAA9H,CAAA,GACFV,EADL,CAEE8H,oBAAoB,EACpBrE,iBAAiB,EACjBoE,iBAAiB,IAErB,IJ3FgC,uBI4F9B,OAAOnH,OAAA8H,EAAA,EAAA9H,CAAA,GACFV,EADL,CAEE+H,iBAAiB,EACjBC,iBAAiB,EACjBC,oBAAoB,IAExB,IJjGgC,uBIkG9B,OAAOvH,OAAA8H,EAAA,EAAA9H,CAAA,GACFV,EADL,CAEEgI,iBAAiB,EACjBD,iBAAiB,EACjBE,oBAAoB,EACpBtE,aAAc4E,EAAO1J,QAAQe,YAAYyG,QACzCvH,QAASyJ,EAAO1J,QAAQC,UAE5B,IJzGmC,0BI0GjC,OAAO4B,OAAA8H,EAAA,EAAA9H,CAAA,GACFV,EADL,CAEEiI,oBAAoB,EACpBD,iBAAiB,EACjBD,iBAAiB,EACjBjJ,QAASyJ,EAAO1J,QAAQC,UAE5B,IJ/G8B,qBIgH5B,OAAO4B,OAAA8H,EAAA,EAAA9H,CAAA,GACFV,EADL,CAEEkI,eAAe,EACfC,eAAe,EACfC,kBAAkB,IAEtB,IJrH8B,qBIsH5B,OAAO1H,OAAA8H,EAAA,EAAA9H,CAAA,GACFV,EADL,CAEEmI,eAAe,EACfD,eAAe,EACfE,kBAAkB,EAClBtI,UAAWyI,EAAO1J,QAAQiB,UAAU4I,KACpC5J,QAASyJ,EAAO1J,QAAQC,UAE5B,IJ7HiC,wBI8H/B,OAAO4B,OAAA8H,EAAA,EAAA9H,CAAA,GACFV,EADL,CAEEoI,kBAAkB,EAClBD,eAAe,EACfD,eAAe,EACfpJ,QAASyJ,EAAO1J,QAAQC,UAE5B,QACE,OAAOkB,+BChJP2I,ECJwB,WAC5B,IAAMC,EACJC,OAAOC,sCAAwCC,IAEjD,OADcC,YAAYzB,EAASqB,EAAiBK,YAAgBC,ODCxDC,GAERC,EAAO,WACX,OACEpI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmI,EAAD,MACArI,EAAAC,EAAAC,cAACoI,EAAD,QAkBSC,mLAXX,OACEvI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAUb,MAAOA,GACf3H,EAAAC,EAAAC,cAACuI,EAAA,EAAD,KACEzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAI5C,UAAWoC,IACjCpI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAOE,KAAK,OAAO5C,UAAWjE,aANtBhB,aEPE8H,QACW,cAA7BhB,OAAOiB,SAASC,UAEe,UAA7BlB,OAAOiB,SAASC,UAEhBlB,OAAOiB,SAASC,SAAS/G,MACvB,wECZNgH,IAASC,OACPjJ,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,KACElJ,EAAAC,EAAAC,cAACiJ,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxL,KAAK,SAAAyL,GACjCA,EAAaC","file":"static/js/main.f3d371b3.chunk.js","sourcesContent":["import * as Actions from './ActionTypes';\nimport fetch from 'cross-fetch';\n\nexport const requestMovies = query => ({\n  type: Actions.REQUEST_MOVIES,\n  payload: {\n    query: query,\n  },\n});\n\nexport const receivedMovies = (query, movies) => ({\n  type: Actions.RECEIVED_MOVIES,\n  payload: {\n    query: query,\n    moviesList: movies,\n  },\n});\n\nexport const invalidateQuery = query => ({\n  type: Actions.INVALIDATE_MOVIES,\n  payload: {\n    query: query,\n  },\n});\n\nconst getURLConfig = () => {\n  const HOST = process.env.REACT_APP_API_HOST;\n  const APIKEY = process.env.REACT_APP_API_KEY;\n  return { HOST, APIKEY };\n};\n\nexport const fetchMovies = query => dispatch => {\n  const { HOST, APIKEY } = getURLConfig();\n  const queryEncoded = encodeURI(query);\n  dispatch(requestMovies(query));\n  fetch(HOST + 'search/movie?api_key=' + APIKEY + '&query=' + queryEncoded)\n    .then(\n      response => response.json(),\n      error => console.log('An error occured', error)\n    )\n    .then(json => {\n      dispatch(receivedMovies(query, json));\n    })\n    .catch(err => dispatch(invalidateQuery(query)));\n};\n\nexport const requestMovieDetail = movieId => ({\n  type: Actions.REQUEST_MOVIE_DETAIL,\n  payload: {\n    movieId: movieId,\n  },\n});\n\nexport const receivedMovieDetail = (movieId, movieInfo) => ({\n  type: Actions.RECEIVE_MOVIE_DETAIL,\n  payload: {\n    movieInfo: movieInfo,\n    movieId: movieId,\n  },\n});\n\nexport const invalidateMovieDetail = movieId => ({\n  type: Actions.INVALIDATE_MOVIE_DETAIL,\n  payload: {\n    movieId: movieId,\n  },\n});\n\nexport const receivedAlternateTitles = (movieId, movieTitles) => ({\n  type: Actions.RECEIVE_MOVIE_ATITLES,\n  payload: {\n    movieId: movieId,\n    movieTitles: movieTitles,\n  },\n});\n\nexport const invalidateAlternateTitle = movieId => ({\n  type: Actions.INVALIDATE_MOVIE_ATITLES,\n  payload: {\n    movieId: movieId,\n  },\n});\n\nexport const requestingAlternateTitle = movieId => ({\n  type: Actions.REQUEST_MOVIE_ATITLES,\n  payload: {\n    movieId: movieId,\n  },\n});\n\nexport const requestingReview = movieId => ({\n  type: Actions.REQUEST_MOVIE_REVIEW,\n  payload: {\n    movieId: movieId,\n  },\n});\n\nexport const receivedReview = (movieId, movieReveiews) => ({\n  type: Actions.RECEIVE_MOVIE_REVIEW,\n  payload: {\n    movieId: movieId,\n    movieReview: movieReveiews,\n  },\n});\n\nexport const invalidateReview = movieId => ({\n  type: Actions.INVALIDATE_MOVIE_REVIEW,\n  payload: {\n    movieId: movieId,\n  },\n});\n\nexport const requestingCrew = movieId => ({\n  type: Actions.REQUEST_MOVIE_CREW,\n  payload: {\n    movieId: movieId,\n  },\n});\n\nexport const receivedCrew = (movieId, movieCrew) => ({\n  type: Actions.RECEIVE_MOVIE_CREW,\n  payload: {\n    movieId: movieId,\n    movieCrew: movieCrew,\n  },\n});\n\nexport const invalidateCrew = movieId => ({\n  type: Actions.INVALIDATE_MOVIE_CREW,\n  payload: {\n    movieId: movieId,\n  },\n});\n\nexport const fetchMovieDetail = id => dispatch => {\n  const { HOST, APIKEY } = getURLConfig();\n  dispatch(requestMovieDetail(id));\n  fetch(HOST + 'movie/' + id + '?api_key=' + APIKEY)\n    .then(\n      response => response.json(),\n      error => console.log('An error occured', error)\n    )\n    .then(json => {\n      dispatch(receivedMovieDetail(id, json));\n    })\n    .catch(err => dispatch(invalidateMovieDetail(id)));\n\n  dispatch(requestingAlternateTitle(id));\n  fetch(HOST + 'movie/' + id + '/alternative_titles?api_key=' + APIKEY)\n    .then(\n      response => response.json(),\n      error => console.log('An error has occured', error)\n    )\n    .then(json => {\n      dispatch(receivedAlternateTitles(id, json));\n    })\n    .catch(err => dispatch(invalidateAlternateTitle(id)));\n\n  dispatch(requestingReview(id));\n  fetch(HOST + 'movie/' + id + '/reviews?api_key=' + APIKEY)\n    .then(\n      response => response.json(),\n      error => console.log('An error has occured', error)\n    )\n    .then(json => {\n      dispatch(receivedReview(id, json));\n    })\n    .catch(err => dispatch(invalidateReview(id)));\n\n  dispatch(requestingCrew(id));\n  fetch(HOST + 'movie/' + id + '/credits?api_key=' + APIKEY)\n    .then(\n      response => response.json(),\n      error => console.log('An error has occured', error)\n    )\n    .then(json => {\n      dispatch(receivedCrew(id, json));\n    })\n    .catch(err => dispatch(invalidateCrew(id)));\n};\n","export const REQUEST_MOVIES = 'REQUEST_MOVIES';\nexport const RECEIVED_MOVIES = 'RECEIVED_MOVIES';\nexport const INVALIDATE_MOVIES = 'INVALIDATE_MOVIES';\n\nexport const REQUEST_MOVIE_DETAIL = 'REQUEST_MOVIE_DETAIL';\nexport const RECEIVE_MOVIE_DETAIL = 'RECEIVE_MOVIE_DETAIL';\nexport const INVALIDATE_MOVIE_DETAIL = 'INVALIDATE_MOVIE_DETAIL';\n\nexport const REQUEST_MOVIE_ATITLES = 'REQUEST_MOVIE_ATITLES';\nexport const RECEIVE_MOVIE_ATITLES = 'RECEIVE_MOVIE_ATITLES';\nexport const INVALIDATE_MOVIE_ATITLES = 'INVALIDATE_MOVIE_ATITLES';\n\nexport const REQUEST_MOVIE_REVIEW = 'REQUEST_MOVIE_REVIEW';\nexport const RECEIVE_MOVIE_REVIEW = 'RECEIVE_MOVIE_REVIEW';\nexport const INVALIDATE_MOVIE_REVIEW = 'INVALIDATE_MOVIE_REVIEW';\n\nexport const REQUEST_MOVIE_CREW = 'REQUEST_MOVIE_CREW';\nexport const RECEIVE_MOVIE_CREW = 'RECEIVE_MOVIE_CREW';\nexport const INVALIDATE_MOVIE_CREW = 'INVALIDATE_MOVIE_CREW';\n","import React, { Component } from 'react';\nimport { TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { fetchMovies } from '../redux/Actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMovies: query => {\n      dispatch(fetchMovies(query));\n    },\n  };\n};\n\nconst style = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    margin: '32px auto',\n    width: '720px',\n  },\n});\n\nclass SearchBar extends Component {\n  state = {\n    query: '',\n  };\n\n  handleQuery = e => {\n    e.preventDefault();\n    this.props.fetchMovies(this.state.query);\n  };\n\n  handleChange = query => e => {\n    this.setState({\n      [query]: e.target.value,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <form\n        className={classes.container}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={this.handleQuery}\n      >\n        <TextField\n          id=\"outlined-query-input\"\n          label=\"Query\"\n          className={classes.textField}\n          type=\"text\"\n          value={this.state.query}\n          onChange={this.handleChange('query')}\n          name=\"query\"\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n      </form>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withStyles(style)(SearchBar))\n);\n","import { Chip, CircularProgress, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchMovieDetail } from '../redux/Actions';\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMovieDetail: movieId => {\n      dispatch(fetchMovieDetail(movieId));\n    },\n  };\n};\n\nconst style = theme => ({\n  root: {\n    maxWidth: 720,\n    margin: '0 auto',\n  },\n  progress: {\n    margin: theme.spacing.unit * 2,\n  },\n  progRoot: {\n    maxWidth: 150,\n    textAlign: 'center',\n    margin: '0 auto',\n  },\n  chip: {\n    margin: theme.spacing.unit,\n  },\n  scrollReview: {\n    width: '100%',\n    height: 150,\n    overflowY: 'scroll',\n    overFlowX: 'hidden',\n  },\n});\n\nclass MovieDetail extends Component {\n  componentWillMount() {\n    this.props.fetchMovieDetail(this.props.match.params.id);\n  }\n\n  render() {\n    const {\n      classes,\n      isMovieDetailReceived,\n      movieDetail,\n      isAtitleReceive,\n      movieAtitles,\n      movieReviews,\n      movieCrew,\n    } = this.props;\n\n    let modalDetail;\n    let populateAlternativeTitles;\n\n    if (isAtitleReceive === true) {\n      let counter = 0;\n      populateAlternativeTitles = movieAtitles.map(title => {\n        counter++;\n        return (\n          <Chip key={counter} className={classes.chip} label={title.title} />\n        );\n      });\n    } else {\n      populateAlternativeTitles = (\n        <div className={classes.progRoot}>\n          Fetching alt. titles\n          <CircularProgress className={classes.progress} size={25} />\n        </div>\n      );\n    }\n\n    let crewInflator;\n\n    if (movieCrew.length > 0) {\n      crewInflator = movieCrew.map(crew => {\n        let profileURL = process.env.REACT_APP_PROFILE_BASE + crew.profile_path;\n        return (\n          <div key={crew.cast_id}>\n            <img\n              src={profileURL}\n              style={{ borderRadius: '50%' }}\n              title={crew.name}\n              alt={crew.name}\n            />\n            <b>Name</b> : {crew.name} <br />\n            <b>Character</b> : {crew.character} <br />\n            <br />\n          </div>\n        );\n      });\n    }\n\n    let reviewInflator;\n\n    if (movieReviews.length > 0) {\n      reviewInflator = movieReviews.map(review => {\n        return (\n          <div key={review.author}>\n            <b>Author</b> : {review.author} <br />\n            <b>Review</b> : {review.content} <br />\n            <br />\n          </div>\n        );\n      });\n    }\n\n    if (isMovieDetailReceived) {\n      const backdropImageLink =\n        process.env.REACT_APP_BACKDROP_BASE + movieDetail.backdrop_path;\n      modalDetail = (\n        <Grid container spacing={24} className={classes.root}>\n          <Grid item md={12} xs={12}>\n            <img\n              style={{\n                width: '100%',\n                height: '350px',\n              }}\n              src={backdropImageLink}\n              alt={movieDetail.title}\n              title={movieDetail.title}\n            />\n          </Grid>\n          <Grid item md={12} xs={12}>\n            <h2>{movieDetail.title}</h2>\n          </Grid>\n          <Grid item xs={12} md={12}>\n            <b>Release Date: </b> {movieDetail.release_date}\n          </Grid>\n          <Grid item xs={12} md={12}>\n            <h2> Alternate Titles </h2>\n            {populateAlternativeTitles}\n          </Grid>\n          <Grid item xs={12} md={12}>\n            <h2>Reviews</h2>\n            <div className={classes.scrollReview}>{reviewInflator}</div>\n          </Grid>\n          <Grid item xs={12} md={12}>\n            <h2>Crew</h2>\n            <div className={classes.scrollReview}>{crewInflator}</div>\n          </Grid>\n        </Grid>\n      );\n    } else {\n      modalDetail = (\n        <div className={classes.progRoot}>\n          <CircularProgress className={classes.progress} size={25} />\n        </div>\n      );\n    }\n\n    return modalDetail;\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withStyles(style)(MovieDetail))\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  CircularProgress,\n  CardActionArea,\n  CardMedia,\n} from '@material-ui/core';\nimport { fetchMovieDetail } from '../redux/Actions';\nimport { withRouter, NavLink } from 'react-router-dom';\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMovieDetail: movieId => {\n      dispatch(fetchMovieDetail(movieId));\n    },\n  };\n};\n\nconst style = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  card: {\n    maxWidth: 320,\n  },\n  cardContent: {\n    height: 90,\n    textAlign: 'center',\n  },\n  grid: {\n    maxWidth: 720,\n    margin: '8px auto',\n  },\n  media: {\n    objectFit: 'cover',\n  },\n  progress: {\n    margin: theme.spacing.unit * 2,\n  },\n  progRoot: {\n    maxWidth: 60,\n    margin: '0 auto',\n  },\n});\n\nclass MovieGrid extends Component {\n  render() {\n    const { isReceived, isRequesting, movieList, classes } = this.props;\n\n    if (isReceived === true) {\n      const inflateMovies = movieList.results.map(movie => {\n        let posterLink;\n        if (movie.poster_path !== null)\n          posterLink = process.env.REACT_APP_POSTER_BASE + movie.poster_path;\n        else\n          posterLink =\n            'https://www.seattletaekwondo.com/wp-content/uploads/2017/04/default-image.jpg';\n        const detailLink = '/' + movie.id;\n        return (\n          <Grid item key={movie.id} xs={12} md={4}>\n            <NavLink\n              to={detailLink}\n              activeStyle={{\n                textDecoration: 'none',\n                color: 'black',\n              }}\n            >\n              <Card className={classes.card}>\n                <CardActionArea>\n                  <CardMedia\n                    height=\"140\"\n                    component=\"img\"\n                    alt={movie.title}\n                    className={classes.media}\n                    title={movie.title}\n                    image={posterLink}\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography>{movie.title}</Typography>\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n            </NavLink>\n          </Grid>\n        );\n      });\n      return (\n        <div className={classes.root}>\n          <Grid className={classes.grid} container spacing={16}>\n            {inflateMovies}\n          </Grid>\n        </div>\n      );\n    } else if (isRequesting === true) {\n      return (\n        <div className={classes.progRoot}>\n          <CircularProgress className={classes.progress} size={25} />\n        </div>\n      );\n    }\n    return <div />;\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withStyles(style)(MovieGrid))\n);\n","import * as ActionTypes from './ActionTypes';\n\nexport const Reducer = (\n  state = {\n    isRequesting: false,\n    isReceived: false,\n    isRequestInvalidated: false,\n\n    isMovieDetailRequesting: false,\n    isMovieDetailReceived: false,\n    isMovieDetailInvalidated: false,\n\n    isAtitleRequest: false,\n    isAtitleReceive: false,\n    isAtitleInvalidate: false,\n\n    isReviewRequest: false,\n    isReviewReceive: false,\n    isReviewInvalidate: false,\n\n    isCrewRequest: false,\n    isCrewReceive: false,\n    isCrewInvalidate: false,\n\n    movieList: [],\n    movieAtitles: [],\n    movieReviews: [],\n    movieCrew: [],\n    movieDetail: '',\n    queryString: '',\n    movieId: 0,\n    page: 1,\n  },\n  action\n) => {\n  switch (action.type) {\n    case ActionTypes.REQUEST_MOVIES:\n      return {\n        ...state,\n        isRequesting: true,\n        isReceived: false,\n        queryString: action.payload.query,\n      };\n    case ActionTypes.RECEIVED_MOVIES:\n      return {\n        ...state,\n        isReceived: true,\n        isRequesting: false,\n        movieList: action.payload.moviesList,\n      };\n    case ActionTypes.INVALIDATE_MOVIES:\n      return {\n        ...state,\n        isRequestInvalidated: true,\n        isReceived: false,\n        isRequesting: false,\n        queryString: action.payload.query,\n      };\n    case ActionTypes.REQUEST_MOVIE_DETAIL:\n      return {\n        ...state,\n        isMovieDetailRequesting: true,\n        isMovieDetailReceived: false,\n        movieId: action.payload.movieId,\n      };\n    case ActionTypes.RECEIVE_MOVIE_DETAIL:\n      return {\n        ...state,\n        isMovieDetailReceived: true,\n        isMovieDetailRequesting: false,\n        movieId: action.payload.movieId,\n        movieDetail: action.payload.movieInfo,\n      };\n    case ActionTypes.INVALIDATE_MOVIE_DETAIL:\n      return {\n        ...state,\n        isMovieDetailInvalidated: true,\n        isMovieDetailReceived: false,\n        isMovieDetailRequesting: false,\n        movieId: action.payload.movieId,\n      };\n    case ActionTypes.REQUEST_MOVIE_ATITLES:\n      return {\n        ...state,\n        isAtitleRequest: true,\n        isAtitleReceive: false,\n        isAtitleInvalidate: false,\n      };\n    case ActionTypes.RECEIVE_MOVIE_ATITLES:\n      return {\n        ...state,\n        isAtitleReceive: true,\n        isAtitleRequest: false,\n        isAtitleInvalidate: false,\n        movieAtitles: action.payload.movieTitles.titles,\n      };\n    case ActionTypes.INVALIDATE_MOVIE_ATITLES:\n      return {\n        ...state,\n        isAtitleInvalidate: true,\n        isAtitleReceive: false,\n        isAtitleRequest: false,\n      };\n    case ActionTypes.REQUEST_MOVIE_REVIEW:\n      return {\n        ...state,\n        isReviewRequest: true,\n        isReviewReceive: false,\n        isReviewInvalidate: false,\n      };\n    case ActionTypes.RECEIVE_MOVIE_REVIEW:\n      return {\n        ...state,\n        isReviewReceive: true,\n        isReviewRequest: false,\n        isReviewInvalidate: false,\n        movieReviews: action.payload.movieReview.results,\n        movieId: action.payload.movieId,\n      };\n    case ActionTypes.INVALIDATE_MOVIE_REVIEW:\n      return {\n        ...state,\n        isReviewInvalidate: true,\n        isReviewReceive: false,\n        isReviewRequest: false,\n        movieId: action.payload.movieId,\n      };\n    case ActionTypes.REQUEST_MOVIE_CREW:\n      return {\n        ...state,\n        isCrewRequest: true,\n        isCrewReceive: false,\n        isCrewInvalidate: false,\n      };\n    case ActionTypes.RECEIVE_MOVIE_CREW:\n      return {\n        ...state,\n        isCrewReceive: true,\n        isCrewRequest: false,\n        isCrewInvalidate: false,\n        movieCrew: action.payload.movieCrew.cast,\n        movieId: action.payload.movieId,\n      };\n    case ActionTypes.INVALIDATE_MOVIE_CREW:\n      return {\n        ...state,\n        isCrewInvalidate: true,\n        isCrewReceive: false,\n        isCrewRequest: false,\n        movieId: action.payload.movieId,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { Component } from 'react';\nimport SearchBar from './Components/SearchBar';\nimport MovieDetail from './Components/MovieDetail';\nimport MovieGrid from './Components/MovieGrid';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/Store';\nimport { Route, Switch } from 'react-router-dom';\n\nconst store = ConfigureStore();\n\nconst Home = () => {\n  return (\n    <div>\n      <SearchBar />\n      <MovieGrid />\n    </div>\n  );\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/:id\" component={MovieDetail} />\n        </Switch>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport { Reducer } from './Reducers';\nimport thunk from 'redux-thunk';\n\nexport const ConfigureStore = () => {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(Reducer, composeEnhancers(applyMiddleware(thunk)));\n  return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}